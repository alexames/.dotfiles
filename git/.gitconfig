[user]
	email = Alexander.Ames@gmail.com
	name = Alexander Ames
[include]
	path = ~/.gitconfig.local
[core]
	excludesFile = ~/.gitignore_global
[push]
	autoSetupRemote = true
[diff]
	tool = bc
[difftool "bc"]
	trustExitCode = true
[url "git@github.com:"]
	insteadOf = https://github.com/
[diff]
	tool = vimdiff
[merge]
	tool = vimdiff
[difftool]
	prompt = false
[alias]
	# Diffing.
	d = diff
	dt = difftool
	mt = mergetool

	# Add.
	a = add
	aa = add .

	# Commit.
	c = commit
	ca = commit -a
	cm = commit -m
	cam = commit -a -m

	# Amend commits, (in|ex)cluding everything, (with|without) message update.
	amend = commit --amend
	m = commit --amend --no-edit
	ma = commit --amend -a --no-edit

	# Check out remote branch.
	track = checkout --track
	t = checkout --track

	# Pretty log printers.
	lg = log --all --decorate --color --graph --pretty=format:'%C(bold blue)%h%Creset - %Cgreen(%cr)%Creset %s %C(bold blue)<%an>%C(auto)%d%Creset' --abbrev-commit
	l  = log       --decorate --color         --pretty=format:'%C(bold blue)%h%Creset - %Cgreen(%cr)%Creset %s %C(bold blue)<%an>%C(auto)%d%Creset' --abbrev-commit
	la = log --all --decorate --color         --pretty=format:'%C(bold blue)%h%Creset - %Cgreen(%cr)%Creset %s %C(bold blue)<%an>%C(auto)%d%Creset' --abbrev-commit

	# Utilities that print and get commits.
	simple-log = log --all --pretty=format:'%h %s <%an>'
	branch-ls = for-each-ref --format='%(refname:short)' refs/heads/

	# fzf enabled commands.
	fzf = !fzf -i --reverse --height=~50% # 
	# cp  = !git simple-log | git fzf    --bind 'enter:become(git cherry-pick $({1} | awk '{print $1}\')'
	p   = !git remote    | git fzf -1 --bind 'enter:become(git push     {1})'
	b   = !git branch-ls | git fzf    --bind 'enter:become(git checkout {1})'
	rb  = !git branch-ls | git fzf    --bind 'enter:become(git rebase   {1})'
	# Semicolons are treated as comments, unless they are wrapped in quotes.
	co  = "!git checkout $({ git branch-ls & git simple-log; } | git fzf | awk '{print $1}')"
